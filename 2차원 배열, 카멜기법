for(int i =0 ; i <3 ; i++) { i: row
for(int j=0; j<2 ; j++) { j : 컬럼의 갯수

```jsx
package PKG_Class;

public class testClass {

	public static void main(String[] args) {
		// 2차원 배열
		int[][] arr = new int [3][2];
		arr[0][0] = 11;
		arr[0][1] = 30;	
		arr[1][0] = 27;
		arr[1][1] = 36;
		arr[2][0] = 11;
		arr[2][1] = 78;
		
		for(int i =0 ; i <3 ; i++) {
			for(int j=0; j<2 ; j++) {
				System.out.println("arr["+ i + "][" + j + "]=" + arr[i][j]);
				
				arr[i][j] = i + j;
			}
			
		}
		
		String[][] strs = new String[2][3];
		strs[0][0]="";
		strs[0][1]="";
		strs[0][2]="";
		strs[1][0]="";
		strs[1][1]="";
		strs[1][2]="";
		
		// 두가지가 뭐가 다른가 / 똑같아보이지만 
		int rec_rowCount = 3;
		int rec_colCount = 2;
	//1)
		/*
		long[][] ln = new long[rec_rowCount][rec_colCount];
		
		ln[0][0] = 1234;
		ln[1][0] = 1234;
		ln[2][0] = 1234;
		*/
		String[][] str_students = new String[rec_rowCount][rec_colCount];
		
		for(int i=0; i<rec_rowCount; i++) {
			
			for(int j=0; j<rec_colCount; j++) {
				
			}
		}
		
	//2)
		
		long[][] ln2 = new long[3][1];
		ln2[0][0] = 123455;
		ln2[1][0] = 123455;
		ln2[2][0] = 123455;
		
		long[] ln3 = new long[3];
		ln3[0] = 123455;
		ln3[1] = 123455;
		ln3[2] = 123455;  // 3?
		
		// 1차원 배열
		int[] a = new int[4];
		
		//카멜 기법
카멜표기법은, 이른바 낙타표기법은 말그대로 낙타의 등모습을 닮았습니다. 
카멜표기법은 기본적으로 변수명을 모두 소문자로 씁니다.
다만 여러 단어가 이어지는 경우 첫단어를 제외하고 각 단어의 첫글자만 대문자로 지정해 
주는 방식입니다

		String[][] strProducts = new String[2][3];
		
		strProducts[0][0] = "1";
		strProducts[0][1] = "2";
		strProducts[0][2] = "3";
		
		strProducts[0][0] = "300";
		strProducts[0][1] = "400";
		strProducts[0][2] = "500";
		
	} // main(String[] args) {

}
```

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c23336c6-b3bb-41eb-a5ed-b3b7c28b7a1b/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c23336c6-b3bb-41eb-a5ed-b3b7c28b7a1b/Untitled.png)

---

---

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8e43c240-d702-4c82-bcaf-ae6b12c13d1b/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8e43c240-d702-4c82-bcaf-ae6b12c13d1b/Untitled.png)

객체지향언어 : 모든프로그램을 객체화 해서 프로그래밍 하겠다.

데이타베이스는 관계형의 관점에서 설계를 했다. 

성적프로그램  : 객체지향관점에서 설계를 한다.

StartClass.java

```jsx

예전코딩

/*
		String[] strNames = new String[3];
		strNames[0] = "홍길동";
		strNames[1] = "김갑순";
		strNames[2] = "홍길순";
						
		int[][] stdScores = new int[3][4];
		
		//홍길동 점수
		stdScores[0][0] = 80;
		stdScores[0][1] = 80;
		stdScores[0][2] = 80;
		stdScores[0][3] = 80;
		
		//김갑순 점수
		stdScores[1][0] = 70;
		stdScores[1][1] = 70;
		stdScores[1][2] = 70;
		stdScores[1][3] = 70;
		
		//홍길순 점수
		stdScores[2][0] = 75;
		stdScores[2][1] = 75;
		stdScores[2][2] = 75;
		stdScores[2][3] = 75;
		
		int avg = 0;
		int total = 0;
		for(int i=0;i<3;i++) {
			
			for(int j=0;j<4;j++) {
				total += stdScores[i][j];
			}
			
			avg = total / 4;
			
			setPrint(strNames[i] + " : " + " 총점:" + total + ", 평균:" + avg );
			avg = 0;
			total = 0;
			
		}
		*/
```

```jsx
import PKG_EX.*;

public class StartClass {

	public static void setPrint(String rst) {
			
		System.out.println(rst);
		
	}
	
	public static void main(String[] args) {
		
		//객체지향관점
		//모든 프로그램의 중심은 객체에게 있다.
		//학생, 과목
		
		Student std1 = new Student();  //학생 한명을 만든것
		std1.name = "홍길동";
		std1.exam("국어", 80);
		std1.exam("수학", 70);
		std1.exam("영어", 90);
		std1.exam("과학", 60);
		
		std1.getTotal();
		std1.getAvg();
		
		Student std2 = new Student();
		std2.name = "김갑순";
		std2.exam("국어", 75);
		std2.exam("수학", 90);
		
		std2.getTotal();
		std2.getAvg();
		
	
		
	} // main(String[] args) {

}
```

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e6af9f8c-203e-41c3-9e13-3192ed9f4bb4/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e6af9f8c-203e-41c3-9e13-3192ed9f4bb4/Untitled.png)

student.java

```jsx
package PKG_EX;

public class Student {

	//속성 - 이름
	public String name;
	public int totalscore;
	public int examCount;
	public double avgScore;
	
	//행위 - 시험을 친다. (어떤과목) - 4과목 시험
	// method : Student라는 객체가 하는 행위를 정의
	public void exam(String strSubject, int score) {
		
		System.out.println(name + " 학생의 " + strSubject + " 과목점수는 " + score );
		
		setTotal(score);  //누적점수 / 분기 / 밑에 내려가서 set 읽고 다시올라온다
	
	}
	
	//학생의 총점을 만들어서 돌려주자
	public void setTotal(int score) {
		
		totalscore += score;  // 누적점수가 쌓이게 되고 
		//totalscore = totalscore + score;
		
		examCount += 1; // 시험을 친 카운트도 하나씩 늘려주자
		avgScore = totalscore / examCount; // 평균점수까지 구하자	
	}
	
	
	//private: 접근한정자 공개할 내용을 숨긴다 
	public void getTotal() {
		System.out.println(name + " 학생의 총점은 " + totalscore);
	
	}
	
	public void getAvg() {
		System.out.println(name + " 학생의 평균점수는" + avgScore);
		
	}
	
	
}
```

---

---

—혼자서—-

---

```jsx
import PKG_EX_01.*;

public class StartClass_01 {

	
	public static void main(String[] args) {
		
		Student_01 std1 = new Student_01();
		std1.name_01 = "홍길동";
		std1.exam_01("국어", 80);
		std1.exam_01("영어", 100);
		std1.exam_01("수학", 97);
		
		std1.allTotal();
		std1.allAvg();
	
		Student_01 std2 = new Student_01();
		std2.name_01 = "전우치";
		std2.exam_01("국어", 88);
		std2.exam_01("영어", 55);
		std2.exam_01("수학", 22);
		
		std2.allTotal();
		std2.allAvg();
	}
	
}
```

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/33632338-1e1f-4f42-b4a3-6cd66d8a7c32/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/33632338-1e1f-4f42-b4a3-6cd66d8a7c32/Untitled.png)

```jsx
package PKG_EX_01;

public class Student_01 {
	
	public String name_01;
	public int subTotal_01; 
	public int subCount_01;
	public double subAvg_01;
	
	//method : 행위 시험을 친다
	
	//1) 시험을 친다 
	public void exam_01( String Subject, int score ) {
		
		System.out.println(name_01 + " 의 " +Subject + "점수는 " +score + "점 입니다.");
		
		setTotal(score);
	}
	
	//2) 누적점수 쌓는거?
	
	public void setTotal( int score ) {
		
		subTotal_01 += score; 
		subCount_01 += 1;  //시험친 과목수
		subAvg_01 = subTotal_01/subCount_01;
				
	}
	
	//3) 전과목 총점 결과값을 찍어내는 식
	public void allTotal() {
		
		System.out.println(name_01 + "의 전과목 총점은" + subTotal_01 + "입니다");
	}
	
	//4) 전과목 평균 결과값을 찍어내는 식
	public void allAvg() {
		
		System.out.println(name_01 + "의 전과목 평균은" + subAvg_01 + "입니다");
	}
	
} // Student_01 {
```

---

---
