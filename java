this가 하는 일 
자신의 메모리를 가리킴 ( 생성된 인스턴스 스스로를 가리키는 예약어  )
생성자에서 다른 생성자를 호출
자신의 주소를 반환 함 
 
객체 간의 협력

static 변수
static 변수의 정의와 사용 방법
여러 개의 인스턴스가 같은 메모리의 값을 공유하기 위해 사용

static 변수 vs 인스턴스 변수
serialNumber를 static으로 선언하면 모든 student instance 에 대해 하나의 변수로 유지되고
이러한 변수를 class변수라 한다.

static 변수 예) 여러 인스턴스가 하나의 메모리 값을 공유 할 때 필요, 
학생이 생성될 때마다 학번이 증가해야 하는경우 기준이 되는 값은 static 변수로 생성하여 유지 함
-각 학생이 생성될 때 마다 static 변수 값을 복사해 와서 하나 증가 시킨 값을 생성된 인스턴스의 학번 변수에 저장해 줌
static 변수는 인스턴스가 생성될 때 마다 다른 메모리를 가지는 것이 아니라 프로그램이 메모리에 적재 (load) 될때 
데이터 영역의 메모리에 생성됨
따라서 인스턴스 생성과 관계없이 클래스 이름을 직접 참조함 
다른이름으로 클래스 변수라고도 한다

멤머변수는 다른 말로 인스턴스 변수라고 함  

static 메서드
클래스 메서드 라고도함
메서드에 static 키워드를 사용하여 구현
주로 static 변수를 위한 기능 제공
static 메서드에서 인스턴스 변수를 사용할 수 없음
static 메서드도 인스턴스의 생성과 관계없이 클래스 이름으로 직접 메서드 호출
-인스턴스 변수의 경우 꼭 인스턴스가 먼저 생성되어야 하므로 static 메서드에서는 생성이 
불확실한 인스턴스 변수를 사용할 수 없음

static 응용 : singleton 패턴
전 시스템에 단 하나의 인스턴스만이 존재하도록 구현하는 방식 

배열 쓰는 이유 : 배열은 동일한 자료형의 변수를 한꺼번에 순차적으로 관리할 수 있다.

배열 선언하기
자료형 [] 배열이름 = new 자료형 [개수];
int[]arr = new int[10];
자료형 배열이름 []  = new 자료형 [개수];
int arr [] = new int [10];

배열 초기화 
배열은 선언과 동시에 초기화 할 수 있음
배열을 초기화 할 때는 배열의 개수를 명시하지 않음
아무런 초기화 값이 없이 선언만 한 경우, 정수는 0, 실수는 0.0 객체배열은 null로 초기화 됨

배열 사용하기
[] : 인덱스 혹은 첨자 연산자
배열의 위치를 지정하여 자료를 가져옴
모든 배열의 순서는 0부터 시작 함 
n개 배열은 0부터 n-1 위치까지 자료가 존재
) int[] num = new int [] { 1,2,3,4,5,6,7,8,9,10 }

배열의 길이와 유효한 요소 값
배열의 길이의 속성 : length
자료가 있는 요소만 출력하려면 크기에 대한 저장을 따로 해야함 

객체 배열 만들기 
참조 자료형을 선언하는 객체 배열 
배열만 생성 한 경우 요소는 null로 초기화  됨
각 요소를 new를 활용하여 생성하여 저장해애 함

배열 복사 하기
기존 배열과 같은 배열을 만들거나 배열이 꽉 찬 경우 더 큰 배열을 만들고 
기존 배열 자료를 복사할 수 있습니다. 
System.arraycopy(src, srcPos dest,, destPos, length);

객체 배열 복사하기
얕은 복사 : 배열 요소의 주소만 복사 되므로 배열 요소가 변경되면 복사된 배열의 값도 변경됨

향상된 for 문 ( enhanced for loop )
배열 요소의 처음부터 끝가지 모든 요소를 참조 할 때 편리한 반복문 
for( 변수 : 배열 ) {
	반복 실행문; 
}

다차원 배열
2차원 이상의 배열
지도,게임, 등 평면이나 공간을 구현 할 때 많이 사용 됨
이차원 배열의 선언과 구조
int [] [] arr = new int [] [] ;
int:자료형 , 배열이름: arr = [] :행개수 , [] :열개수

ArrayList 클래스
기존 배열은 길이를 정하여 선언하므로 사용 중 부족한 경우 다른 배열로 복사하는 코드를 직접 구현해야함
중간의 요소가 삭제되거나 삽입되는 경우도 나머지 요소에 대한 조정하는 코드를 구현 해야함
arraylist 클래스는 자바에서 제공되는 객체 배열이 구현된 클래스 여러 메서드와 속성등 사용하여
객체 배열을 편리하게 관리 할 수 있음

ArrayList 클래스 주요 메서드
요소를 추가하거나 제거 할 때 각 내부에서 코드가 모두 구현되어 있으므로 배열을 직접 선언하여
사용하는 것보다 편리함 

ArrayList 클래스 사용하기 
ArrayList<E> 배열 이름 = new ArrayList<E>();
사용할 객체를 E위치에 넣고 ArryList 메서드를 활용하여 추가하거나 참조할 수 있음

상속이란?
클래스를 정의 할 때 이미 구현된 클래스를 상속(ingeritance) 받아서 속성이나 기능이 확장되는 클래스를 구현함
상속하는 클래스 : 상위 클래스, parent class, base class, super class
상속받는 클래스 : 하위 클래스, child class, derived class, subclass
클래스 상속 문법
class B extends A {

}
상위 클래스는 하위 클래스 보다 일반적인 의미를 가짐
하위 클래스는 상위 클래스 보다 구체적인 의미를 가짐 
-extends 뒤에는 단 하나의 class만 사용할 수 있음 

상속을 활용한 고객관리 프로그램
고객의 정보를 활용하여 고객 맞춤 서비스를 구현
고객의 등급에 따라 차별화 된 할인율과 포인트를 지급
등급에 따른 클래스를 따로 구현하는 것이 아닌 일반적인 클래스를 먼저 구현하고
그 보다 기능이 많은 클래스는 상속을 활용하여 구현함

